{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jvmor\\\\Desktop\\\\NODEProjects\\\\cronometro\\\\src\\\\Contador.js\";\nimport React from 'react';\nimport Botao from './Botao';\n\nclass Contador extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      segundos: 0,\n      minutos: 0,\n      stop: false,\n      nameStop: \"Stop\",\n      parcial: \"Sem Parciais\"\n    };\n  }\n\n  incrementar() {\n    this.setState(state => {\n      if (this.state.stop == false) {\n        if (state.segundos >= 5) {\n          this.zerar();\n          this.incrementarMinutos();\n        }\n\n        return {\n          segundos: state.segundos + 1\n        };\n      }\n    });\n  }\n\n  zerar() {\n    this.setState({\n      segundos: 0\n    });\n  }\n\n  incrementarMinutos() {\n    this.setState({\n      minutos: this.state.minutos + 1\n    });\n  }\n\n  zerarCronometro() {\n    this.setState({\n      segundos: 0,\n      minutos: 0\n    });\n  }\n\n  pararTempo() {\n    this.setState({\n      stop: !this.state.stop\n    });\n\n    if (this.state.stop) {\n      this.setState({\n        nameStop: \"Stop\"\n      });\n    } else {\n      this.setState({\n        nameStop: \"Play\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.incrementar(), 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.state.minutos, \":\", this.state.segundos), /*#__PURE__*/React.createElement(Botao, {\n      onClick: () => {\n        this.zerarCronometro();\n      },\n      label: \"Zerar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Botao, {\n      onClick: () => {\n        this.pararTempo();\n      },\n      label: this.state.nameStop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Botao, {\n      onClick: () => {},\n      label: \"Parcial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LabelCronometro, {\n      name: this.state.parcial,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default Contador;","map":{"version":3,"sources":["C:/Users/jvmor/Desktop/NODEProjects/cronometro/src/Contador.js"],"names":["React","Botao","Contador","Component","constructor","props","state","segundos","minutos","stop","nameStop","parcial","incrementar","setState","zerar","incrementarMinutos","zerarCronometro","pararTempo","componentDidMount","timer","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,OAAO,EAAE,CAFA;AAGTC,MAAAA,IAAI,EAAE,KAHG;AAITC,MAAAA,QAAQ,EAAE,MAJD;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AAEDC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,CACKP,KAAD,IAAW;AACP,UAAG,KAAKA,KAAL,CAAWG,IAAX,IAAiB,KAApB,EAA0B;AACtB,YAAIH,KAAK,CAACC,QAAN,IAAkB,CAAtB,EAAwB;AACpB,eAAKO,KAAL;AACA,eAAKC,kBAAL;AACH;;AACD,eAAO;AAACR,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,GAAiB;AAA5B,SAAP;AACH;AACJ,KATL;AAWH;;AAEDO,EAAAA,KAAK,GAAE;AACH,SAAKD,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACH;;AAEDQ,EAAAA,kBAAkB,GAAE;AAChB,SAAKF,QAAL,CAAiB;AAACL,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GAAqB;AAA/B,KAAjB;AACH;;AAEDQ,EAAAA,eAAe,GAAE;AACb,SAAKH,QAAL,CAAc;AACVN,MAAAA,QAAQ,EAAE,CADA;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIH;;AAEDS,EAAAA,UAAU,GAAE;AACR,SAAKJ,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADR,KAAd;;AAGA,QAAI,KAAKH,KAAL,CAAWG,IAAf,EACQ;AAAC,WAAKI,QAAL,CAAc;AACXH,QAAAA,QAAQ,EAAE;AADC,OAAd;AAEE,KAHX,MAKQ;AAAC,WAAKG,QAAL,CAAc;AACXH,QAAAA,QAAQ,EAAE;AADC,OAAd;AAEF;AACV;;AAEDQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,GAAaC,WAAW,CAAE,MAAM,KAAKR,WAAL,EAAR,EAA4B,IAA5B,CAAxB;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWE,OAAhB,OAA0B,KAAKF,KAAL,CAAWC,QAArC,CADR,eAEQ,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKS,eAAL;AAAuB,OAA/C;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,eAGQ,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKC,UAAL;AAAkB,OAA1C;AAA4C,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWI,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,eAIQ,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAM,CAAG,CAAzB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,eAKQ,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,CADJ;AASH;;AAtEiC;;AAyEtC,eAAeT,QAAf","sourcesContent":["import React from 'react'\r\nimport Botao from './Botao'\r\n\r\n\r\nclass Contador extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            segundos: 0,\r\n            minutos: 0,\r\n            stop: false,\r\n            nameStop: \"Stop\",\r\n            parcial: \"Sem Parciais\"\r\n        }\r\n    }\r\n\r\n    incrementar(){\r\n        this.setState(\r\n            (state) => {\r\n                if(this.state.stop==false){\r\n                    if (state.segundos >= 5){\r\n                        this.zerar()\r\n                        this.incrementarMinutos()\r\n                    }\r\n                    return({segundos: state.segundos + 1})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    zerar(){\r\n        this.setState({segundos: 0})\r\n    }\r\n\r\n    incrementarMinutos(){\r\n        this.setState   ({minutos: this.state.minutos + 1})\r\n    }\r\n\r\n    zerarCronometro(){\r\n        this.setState({\r\n            segundos: 0,\r\n            minutos: 0\r\n        })\r\n    }\r\n\r\n    pararTempo(){\r\n        this.setState({\r\n            stop: !this.state.stop\r\n        })\r\n        if (this.state.stop)\r\n                {this.setState({\r\n                    nameStop: \"Stop\"         \r\n                })}\r\n            else\r\n                {this.setState({\r\n                    nameStop: \"Play\"         \r\n            })}     \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer = setInterval( () => this.incrementar(), 1000)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                    <h1>{this.state.minutos}:{this.state.segundos}</h1>\r\n                    <Botao onClick={() => { this.zerarCronometro()}} label=\"Zerar\" />\r\n                    <Botao onClick={() => { this.pararTempo()}} label={this.state.nameStop} />\r\n                    <Botao onClick={() => { }} label=\"Parcial\" />\r\n                    <LabelCronometro name={this.state.parcial} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contador"]},"metadata":{},"sourceType":"module"}